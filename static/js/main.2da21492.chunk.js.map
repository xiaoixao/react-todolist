{"version":3,"sources":["components/Input.js","components/List.js","components/TodoList.js","index.js"],"names":["Input","id","ref","inp","input","type","value","this","props","inpValue","onChange","handleChange","onClick","addTodo","Component","List","arr1","todos","filter","item","done","length","renderTodos","style","color","Control","e","setState","target","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","htmlFor","deleteTodo","ReactDOM","render","TodoList","document","getElementById"],"mappings":"6KAmBeA,E,uKAhBH,IAAD,OACP,OACE,6BACE,2BACEC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GACvBE,KAAK,OACLC,MAAOC,KAAKC,MAAMC,SAClBC,SAAUH,KAAKC,MAAMG,eAEvB,4BAAQC,QAASL,KAAKC,MAAMK,SAA5B,qB,GAXYC,aC4BLC,E,uKA1BX,IAAIC,EAAOT,KAAKC,MAAMS,MAAMC,QAAQ,SAAAC,GAAI,OAAKA,EAAKC,QAClD,OACE,6BACI,uDAASJ,EAAKK,QACd,4BACGd,KAAKC,MAAMc,aAAY,IAE1B,wDACA,wBAAIC,MAAO,CAACC,MAAgB,UACzBjB,KAAKC,MAAMc,aAAY,S,GAXjBR,aCuGJW,E,kDAlGX,aAAc,IAAD,8BACT,gBAMJd,aAAe,SAACe,GACZ,EAAKC,SAAS,CAAClB,SAASiB,EAAEE,OAAOtB,SARxB,EAyBbO,QAAU,WACkB,IAArB,EAAKgB,MAAMpB,WAGd,EAAKkB,SAAS,CACVV,MAAM,CACF,CACIa,MAAO,EAAKD,MAAMpB,SAClBW,MAAM,IAHT,mBAKE,EAAKS,MAAMZ,UAGtB,EAAKU,SAAS,CAAClB,SAAS,OAtCf,EAyCbsB,QAAU,SAACC,GAIP,EAAKL,SAAS,CACVV,MAAO,EAAKY,MAAMZ,MAAMC,QAAO,SAACC,EAAKc,GAAN,OAAcA,GAAOD,QA9C/C,EA0DbE,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAMZ,QACpDkB,EAASF,GAAOb,MAAQe,EAASF,GAAOb,KACxC,EAAKO,SAAS,CACVV,MAAOkB,KA9DF,EAiEbb,YAAc,SAACF,GACX,OAAO,EAAKS,MAAMZ,MAAMsB,KAAI,SAACC,EAAKR,GAC9B,GAAGZ,GAAMoB,EAAKpB,KACV,OAAO,4BACH,2BACIR,QAAS,kBAAI,EAAKsB,OAAOF,IACzBS,QAASrB,EACTf,KAAK,aAET,0BAAMqC,wBAAyB,CAACC,OAAOH,EAAKV,SAC5C,4BACIlB,QAAS,kBAAI,EAAKmB,QAAQC,KAD9B,qBAzEZ,EAAKH,MAAQ,CACTpB,SAAU,GACVQ,MAAM,IAJD,E,gEAYT,IAAIA,EAAQ2B,aAAaC,QAAQ,SAC9B5B,GACCV,KAAKoB,SAAS,CACVV,MAAOmB,KAAKC,MAAMpB,O,2CAK1B2B,aAAaE,QACT,QACAV,KAAKE,UAAU/B,KAAKsB,MAAMZ,U,+BA8DxB,IAAD,EAEoBV,KAAKsB,MAAvBZ,EAFF,EAEEA,MAFF,EAEQR,SAEb,OACE,6BACE,2BAAOsC,QAAQ,OAAf,YACD,kBAAC,EAAD,CAAOtC,SAAUF,KAAKE,SAAUE,aAAcJ,KAAKI,aAAcE,QAASN,KAAKM,UAC/E,kBAAC,EAAD,CAAMI,MAAOA,EAAOK,YAAaf,KAAKe,YAAaY,OAAQ3B,KAAK2B,OAAQc,WAAYzC,KAAKyC,kB,GA7F9ElC,aCItBmC,IAASC,OASR,kBAACC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.2da21492.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Input extends Component {\t\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"inp\"\r\n          ref={inp=>this.input = inp}\r\n          type=\"text\"\r\n          value={this.props.inpValue}\r\n          onChange={this.props.handleChange}\r\n        />\r\n        <button onClick={this.props.addTodo}>添加</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n  render() {\r\n    let arr1 = this.props.todos.filter( item => !item.done);\r\n    return (\r\n      <div>\r\n          <h2>正在进行{arr1.length}</h2>\r\n          <ul>\r\n            {this.props.renderTodos(false)}\r\n          </ul>\r\n          <h2>已经完成</h2>\r\n          <ul style={{color:3<2?'red':'green'}}>\r\n            {this.props.renderTodos(true)}\r\n          </ul>\r\n\r\n\r\n        {/* <h2>正在进行</h2>\r\n        <ul style={{listStyle:\"none\"}}>\r\n          {this.props.renderTodos(false)}\r\n        </ul>  \r\n\t\t\t\t<h2>已完成</h2>  \r\n\t\t\t\t<ul style={{listStyle:\"none\"}}>\r\n\t\t\t\t\t{this.props.renderTodos(true)}\r\n\t\t\t\t</ul> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List;\r\n\r\n\r\n// import React from 'react';\r\n\r\n// let List = (props)=>{\r\n//     return <ul>\r\n//     {\r\n//         props.data.map(\r\n//             (item)=><li key={item.id}>{item.title}</li>\r\n//         )\r\n//     }\r\n//     </ul>\r\n//   }\r\n\r\n// export default List;\r\n","import React, { Component } from 'react';\r\nimport Input from './Input'\r\nimport List from './List'\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        // console.log(arr1);\r\n        return (\r\n          <div>\r\n            <label htmlFor=\"inp\">todoList</label>\r\n          \t<Input inpValue={this.inpValue} handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n         \t\t<List todos={todos} renderTodos={this.renderTodos} toggle={this.toggle} deleteTodo={this.deleteTodo}/>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import Input from './Input'\r\n// import List from './List'\r\n\r\n// class TodoList extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state={\r\n//       inpValue:'',\r\n//       todos:[\r\n// \t\t\t]\r\n//     }\r\n//   }\r\n\r\n//   handleChange=(e)=>{\r\n//     // console.log(e.target.value);\r\n//     this.setState({inpValue:e.target.value});\r\n//   }\r\n//   componentDidMount(){\r\n// \t\t// this.input.focus();\r\n// \t\tlet todos = localStorage.getItem('todos');\r\n// \t\tif(todos){\r\n// \t\t\tthis.setState({\r\n// \t\t\t\ttodos:JSON.parse(todos)\r\n// \t\t\t})\r\n// \t\t}\r\n//   }\r\n//   componentDidUpdate(){\r\n// \t\tlocalStorage.setItem('todos',JSON.stringify(this.state.todos));\r\n// \t}\r\n//   addTodo = ()=>{\r\n// \t\tif(this.state.inpValue === ''){\r\n// \t\t\treturn;\r\n// \t\t}else{\r\n// \t\t\tthis.setState({\r\n// \t\t\t\ttodos:[\r\n// \t\t\t\t\t{\r\n// \t\t\t\t\t\ttitle:this.state.inpValue,\r\n// \t\t\t\t\t\tdone:false\r\n// \t\t\t\t\t},\r\n// \t\t\t\t\t...this.state.todos\r\n// \t\t\t\t]\r\n// \t\t\t})\r\n// \t\t\tthis.setState({inpValue:''});\r\n// \t\t}\r\n//   }\r\n\r\n//   deleteTodo = (index)=>{\r\n// \t\tthis.setState({\r\n// \t\t\ttodos:this.state.todos.filter((item,idx)=>idx != index)\r\n// \t\t})\r\n//   }\r\n  \r\n//   toggle = (index)=>{\r\n// \t\tlet newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n// \t\tnewTodos[index].done = !newTodos[index].done;\r\n// \t\t\tthis.setState({\r\n// \t\t\ttodos:newTodos\r\n// \t\t})\r\n// \t}\r\n// \trenderTodos = (done)=>{\r\n// \t\treturn this.state.todos.map((todo,index)=>{\r\n// \t\t\tif(done == todo.done){\r\n// \t\t\t\treturn <li>\r\n// \t\t\t\t\t<input \r\n// \t\t\t\t\tchecked={done}\r\n// \t\t\t\t\tonClick={()=>this.toggle(index)}\r\n// \t\t\t\t\ttype=\"checkbox\"\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t\t<span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n// \t\t\t\t\t<button onClick={()=>this.deleteTodo(index)}>删除</button>\r\n// \t\t\t\t</li>\r\n// \t\t\t}\r\n// \t\t})\r\n// \t}\r\n\r\n//   render() {\r\n//     const {todos,inpValue} = this.state;\r\n//     return (\t\r\n// \t    <div>\r\n// \t\t\t\t<label htmlFor=\"inp\">todoList</label>\r\n// \t\t\t\t<Input inpValue={this.inpValue} handleChange={this.handleChange}/>\r\n// \t\t\t\t<List todos={todos} renderTodos={this.renderTodos} toggle={this.toggle}\r\n//         deleteTodo={this.deleteTodo}/>\r\n//       </div>      \r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default TodoList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import Home from './pages/Home';\r\n// import Control from './components/Control';\r\n// import Demo01 from './pages/Demo01';\r\n// import App from './pages/App';\r\n// import Hoc,{Detail} from './pages/Hoc';\r\n// import Hook from './pages/Hook';\r\nimport TodoList from './components/TodoList'; \r\n\r\nReactDOM.render(\r\n\t// <Home data='abc'/>,\r\n\t// <Control />,\r\n\t// <Demo01 />,\r\n\t// <App />,\r\n\r\n\t// <div><Hoc /><Detail/></div>,\r\n\t//<Hook/>,\r\n\r\n\t<TodoList/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// 按住alt ，鼠标点击\r\n// Ctrl + shift + 左右键，选中整个单词\r\n// ctrl+shift+L \r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM, { render } from 'react-dom';\r\n\r\n// // import $ from 'jquery'\r\n// // console.log($);\r\n\r\n// const List =(props)=> {\r\n//   return <ul>\r\n//     {\r\n//       props.data.map(\r\n//         (item)=><li key={item.id}>{item.title}</li>\r\n//       )\r\n//     }\r\n//   </ul>\r\n// }\r\n\r\n\r\n// class Home extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     this.state={\r\n//       data:[]\r\n//     }\r\n//\t\t// this.hanleClick = this.handleClick.bind(this)\r\n//\t\t}\r\n//     CompentDidMount(){\r\n//\t\t \tfetch('https://cnodejs.org/api/v1/topics')\r\n//\t\t \t.then(res=>res.json())\r\n//\t \t\t.then(({data})=>{\r\n//\t\t \t\tconsole.log(data);\r\n//\t\t \t\tthis.setState({data})\r\n//\t\t \t})\r\n//\t\t }\r\n\r\n//     // setTimeout(()=>{\r\n//     //   this.setState({data:[5,6,7,8,9]})\r\n//     // },500)\r\n\r\n//   }\r\n//   render(){\r\n//     const {data} = this.state;\r\n//     return <div>\r\n//       <button onClick={this.handleClick}>click</button>\r\n// \t\t\t<Button />\r\n//       <List data={data}/>\r\n//     </div>\r\n    \r\n//     // return <ul>\r\n//     //   {\r\n//     //     data.map(\r\n//     //       (item)=><li>{item.title}</li>\r\n//     //     )\r\n//     //   }\r\n//     // </ul>\r\n//   }\r\n// }\r\n\r\n// const Button =()=>{\r\n//   const btns=[1,2,3,4,5];\r\n//   const handleClick=(i)=>{\r\n// \t\t//事件对象\r\n//     console.log(i);\r\n//   }\r\n//   return <div>\r\n//     {\r\n//       btns.map(\r\n//         (item)=>\r\n// \t\t\t\t<button key={item} onClick={()=>handleClick(item)}>\r\n//           {item}\r\n//         </button>\r\n//       )\r\n//     }\r\n//   </div>\r\n// }\r\n\r\n// ReactDOM.render(\r\n//   <Home />,\r\n//   document.getElementById('root'),\r\n// );\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM, { render } from 'react-dom';\r\n\r\n// function App(props){\r\n//   console.log(props);\r\n//   const  {title,id} = props;\r\n  \r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// //智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     this.state={\r\n//       name:'tom'\r\n//     }\r\n//     setInterval(()=>{\r\n//       this.setState({name:\"abs\"})\r\n//     },2000)\r\n//   }\r\n\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id=\"app\"/> \r\n//     </div>\r\n//   }\r\n// }\r\n\r\n// ReactDOM.render(\r\n//   // <App title=\"任意值\" id=\"app\"/>,//组件\r\n//   <Demo/>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n\r\n\r\n\r\n//2\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\n// let ele = <h1 id=\"title\">\r\n//   当前时间,<br/>\r\n//   {new Date().toLocaleDateString()},<br/>\r\n//   {setInterval(new Date().toLocaleTimeString(),1000)}\r\n// </h1>\r\n\r\n// ReactDOM.render(\r\n//   ele,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//1.\r\n\r\n// import React from 'react';\r\n// // import ReactDOM from 'react-dom';\r\n\r\n// let ele = <h1 id=\"title\" className=\"tit\">\r\n//   <div id='ma'>hello</div>\r\n//   react\r\n//   <div>h2</div>\r\n//   <div>h3</div>\r\n// </h1>\r\n\r\n// // let ele=React.createElement(\r\n// //   'h1',\r\n// //   {id:'title'},\r\n// //   React.createElement('div',{id:'ma'},'hello'),\r\n// //   'react'\r\n// // );\r\n// console.log(ele);\r\n\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     //解构\r\n//     const {type,props} = eleObj;\r\n//     let ele = document.createElement(type);\r\n//     //遍历属性对象，将属性对象添加到第一层节点对象上\r\n//     for(const prop in props){\r\n//       if(prop==\"children\"){\r\n//         if(typeof props.child=='string'){\r\n//           const txtNode = document.createTextNode(props.children);\r\n//           ele.appendChild(txtNode);\r\n//           break;\r\n//         }\r\n      \r\n//         props.children.forEach( child=>{\r\n//           if(typeof child=='string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             // ReactDOM.render(child,ele);\r\n//         }\r\n      \r\n//       })\r\n//       }else{\r\n//         ele.setAttribute('class',props[prop]);\r\n//         //ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n// console.dir(ReactDOM);\r\n\r\n// ReactDOM.render(\r\n//   // <h1>hello react</h1>,\r\n//   ele,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n"],"sourceRoot":""}